name: Build project
on:
  # # Allows you to run this workflow manually from the Actions tab
  # 该配置需要在默认分支仓库才可触发
  push:
    branches:
      - dev
    tags:
      - 'v*'  # 只会在以 v 开头的标签（例如 v1.0.0）推送时触发
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  packages: write
  id-token: write

jobs:
  # 不同 job 之间环境是隔离的
  build-release:
    # runs-on: ubuntu-latest
    # 使用较低 glibc 版本,避免打包后运行环境没有更高版本的 glibc
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12" # 设置 Python 版本
      - name: Set up Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: "22.7"
      - name: Build backend & frontend
        run: |
          source project.sh
          project install module all
          project build all

      - name: pytest
        run: |
          source project.sh
          project install runtime allure
          project test

      - name: upload github release
        env:
          USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
        run: |
          source project.sh
          project release package
          project release upload

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io   # GitHub Container Registry 的域名
          username: ${{ github.actor }}  # GitHub 用户名
          password: ${{ secrets.USER_GITHUB_TOKEN }}  # 从 GitHub Secrets 中获取 Personal Access Token

      # 推送 Docker 镜像到 GitHub Packages
      # github.repository 用户名+仓库名
      - name: Push the Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}


